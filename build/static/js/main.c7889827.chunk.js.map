{"version":3,"sources":["firebase/firebase.js","firebase/auth.js","firebase/db.js","components/SignOut/index.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/GoCheck/index.js","components/PasswordChange/index.js","components/Session/withAuthorization.js","components/Account/index.js","components/Session/withAuthentication.js","components/App/index.js","registerServiceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","initializeApp","db","database","auth","provider","GoogleAuthProvider","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","signInWithGoogle","signInWithPopup","doCreateUser","id","username","ref","set","onceGetUsers","once","doCreateMessage","userId","text","push","onMessageAdded","callback","orderByKey","limitToLast","on","SignOutButton","type","onClick","SIGN_UP","SIGN_IN","PASSWORD_FORGET","HOME","ACCOUNT","Navigation","props","authUser","contextTypes","PropTypes","object","NavigationAuth","to","routes","SignOut","NavigationNonAuth","LandingPage","updateByPropertyName","propertyName","value","INITIAL_STATE","passwordOne","passwordTwo","error","SignUpForm","onSubmit","event","state","history","then","uid","setState","catch","preventDefault","this","isInvalid","onChange","target","placeholder","disabled","message","Component","SignUpLink","withRouter","PasswordForgetForm","PasswordForgetLink","PasswordForgetPage","SignInForm","user","displayName","roles","loginWithGoogle","containerStyle","width","height","GoCheck","useState","center","setCenter","userPos","navigator","geolocation","getCurrentPosition","position","console","log","lat","coords","latitude","lng","longitude","isLoaded","useJsApiLoader","googleMapsApiKey","React","setMap","onLoad","useCallback","map","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","mapContainerStyle","zoom","memo","PasswordChangeForm","withAuthorization","condition","WithAuthorization","onAuthStateChanged","context","AccountPage","PasswordChange","withAuthentication","WithAuthentication","childContextTypes","className","exact","path","component","Landing","SignUp","SignIn","PasswordForget","Account","href","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c7889827.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst prodConfig = {\n  apiKey: \"AIzaSyCJL3HC2QjKiKFrrZPUDWLJDrsp5A0Qf7A\",\n  authDomain: \"gocheck-54a63.firebaseapp.com\",\n  databaseURL: \"https://gocheck-54a63.firebaseio.com\",\n  projectId: \"gocheck-54a63\",\n  storageBucket: \"gocheck-54a63.appspot.com\",\n  messagingSenderId: \"600659811699\",\n  appId: \"1:600659811699:web:40baca5c08ca8c04063906\",\n  measurementId: \"G-K27KD2MWCB\"\n};\n\nconst devConfig = {\n  apiKey: \"AIzaSyCJL3HC2QjKiKFrrZPUDWLJDrsp5A0Qf7A\",\n  authDomain: \"gocheck-54a63.firebaseapp.com\",\n  databaseURL: \"https://gocheck-54a63.firebaseio.com\",\n  projectId: \"gocheck-54a63\",\n  storageBucket: \"gocheck-54a63.appspot.com\",\n  messagingSenderId: \"600659811699\",\n  appId: \"1:600659811699:web:40baca5c08ca8c04063906\",\n  measurementId: \"G-K27KD2MWCB\"\n};\n\nconst config = process.env.NODE_ENV === 'production'\n  ? prodConfig\n  : devConfig;\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst db = firebase.database();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n  db,\n  auth,\n  provider\n};\n","import { auth,provider } from './firebase';\n\n// Sign Up\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\n  auth.createUserWithEmailAndPassword(email, password);\n\n// Sign In\nexport const doSignInWithEmailAndPassword = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\n// Sign out\nexport const doSignOut = () =>\n  auth.signOut();\n\n// Password Reset\nexport const doPasswordReset = (email) =>\n  auth.sendPasswordResetEmail(email);\n\n// Password Change\nexport const doPasswordUpdate = (password) =>\n  auth.currentUser.updatePassword(password);\nexport const signInWithGoogle = () => {\n  return auth.signInWithPopup(provider)\n}","import { db } from './firebase';\n\n// User API\n\nexport const doCreateUser = (id, username, email) =>\n  db.ref(`users/${id}`).set({\n    username,\n    email,\n  });\n\nexport const onceGetUsers = () =>\n  db.ref('users').once('value');\n\n// Chat API\n\nexport const doCreateMessage = (userId, text) =>\n  db.ref('messages').push({\n    userId,\n    text,\n  });\n\nexport const onMessageAdded = (callback) =>\n  db.ref('messages')\n    .orderByKey()\n    .limitToLast(100)\n    .on('child_added', callback);\n\n","import React from 'react';\n\nimport { auth } from '../../firebase';\n\nconst SignOutButton = () =>\n  <button\n    type=\"button\"\n    onClick={auth.doSignOut}\n  >\n    Sign Out\n  </button>\n\nexport default SignOutButton;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport SignOutButton from '../SignOut';\nimport * as routes from '../../constants/routes';\n\nconst Navigation = (props, { authUser }) =>\n  <div>\n    { authUser\n        ? <NavigationAuth />\n        : <NavigationNonAuth />\n    }\n  </div>\n\nNavigation.contextTypes = {\n  authUser: PropTypes.object,\n};\n\nconst NavigationAuth = () =>\n  <ul>\n    <li><Link to={routes.LANDING}>Landing</Link></li>\n    <li><Link to={routes.HOME}>Home</Link></li>\n    <li><Link to={routes.ACCOUNT}>Account</Link></li>\n    <li><SignOutButton /></li>\n  </ul>\n\nconst NavigationNonAuth = () =>\n  <ul>\n    <li><Link to={routes.LANDING}>Landing</Link></li>\n    <li><Link to={routes.SIGN_IN}>Sign In</Link></li>\n  </ul>\n\nexport default Navigation;\n","import React from 'react';\n\nconst LandingPage = () =>\n  <div>\n    <h1>Landing</h1>\n    <p>The Landing Page is open to everyone, even though the user isn't signed in.</p>\n  </div>\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport {\n  Link,\n  withRouter,\n} from 'react-router-dom';\n\nimport { auth, db } from '../../firebase';\nimport * as routes from '../../constants/routes';\n\nconst SignUpPage = ({ history }) =>\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm history={history} />\n  </div>\n\nconst updateByPropertyName = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const {\n      username,\n      email,\n      passwordOne,\n    } = this.state;\n\n    const {\n      history,\n    } = this.props;\n\n    auth.doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n\n        // Create a user in your own accessible Firebase Database too\n        db.doCreateUser(authUser.uid, username, email)\n          .then(() => {\n            this.setState(() => ({ ...INITIAL_STATE }));\n            history.push(routes.HOME);\n          })\n          .catch(error => {\n            this.setState(updateByPropertyName('error', error));\n          });\n\n      })\n      .catch(error => {\n        this.setState(updateByPropertyName('error', error));\n      });\n\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      username === '' ||\n      email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          value={username}\n          onChange={event => this.setState(updateByPropertyName('username', event.target.value))}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          value={email}\n          onChange={event => this.setState(updateByPropertyName('email', event.target.value))}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          value={passwordOne}\n          onChange={event => this.setState(updateByPropertyName('passwordOne', event.target.value))}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          value={passwordTwo}\n          onChange={event => this.setState(updateByPropertyName('passwordTwo', event.target.value))}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        { error && <p>{error.message}</p> }\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () =>\n  <p>\n    Don't have an account?\n    {' '}\n    <Link to={routes.SIGN_UP}>Sign Up</Link>\n  </p>\n\nexport default withRouter(SignUpPage);\n\nexport {\n  SignUpForm,\n  SignUpLink,\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { auth } from '../../firebase';\nimport * as routes from '../../constants/routes';\n\nconst PasswordForgetPage = () =>\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n\nconst updateByPropertyName = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { email } = this.state;\n\n    auth.doPasswordReset(email)\n      .then(() => {\n        this.setState(() => ({ ...INITIAL_STATE }));\n      })\n      .catch(error => {\n        this.setState(updateByPropertyName('error', error));\n      });\n\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      email,\n      error,\n    } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          value={this.state.email}\n          onChange={event => this.setState(updateByPropertyName('email', event.target.value))}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        { error && <p>{error.message}</p> }\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () =>\n  <p>\n    <Link to={routes.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n\nexport default PasswordForgetPage;\n\nexport {\n  PasswordForgetForm,\n  PasswordForgetLink,\n};\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { auth } from '../../firebase';\nimport * as routes from '../../constants/routes';\n\nconst SignInPage = ({ history }) =>\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm history={history} />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n\nconst updateByPropertyName = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const {\n      email,\n      password,\n    } = this.state;\n\n    const {\n      history,\n    } = this.props;\n\n    auth.doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState(() => ({ ...INITIAL_STATE }));\n        history.push(routes.HOME);\n      })\n      .catch(error => {\n        this.setState(updateByPropertyName('error', error));\n      });\n\n    event.preventDefault();\n  }\n  loginWithGoogle(){\n    auth.signInWithGoogle().then(authUser => {\n      \n\n\n\n      this.setState(() => ({\n        username: authUser.user.displayName,\n        email: authUser.user.email,\n        roles: {},\n      }))\n\n\n\n\n\n    }).catch(error => {\n      this.setState(updateByPropertyName('error', error));\n    });\n  }\n  render() {\n    const {\n      email,\n      password,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      password === '' ||\n      email === '';\n\n    return (\n      <>\n      <form onSubmit={this.onSubmit}>\n        <input\n          value={email}\n          onChange={event => this.setState(updateByPropertyName('email', event.target.value))}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          value={password}\n          onChange={event => this.setState(updateByPropertyName('password', event.target.value))}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        { error && <p>{error.message}</p> }\n      </form>\n      <button onClick={event => this.loginWithGoogle()} >Logga iN</button>\n      </>\n    );\n  }\n}\n\nexport default withRouter(SignInPage);\n\nexport {\n  SignInForm,\n};\n","import React, { useState } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n  width: \"400px\",\r\n  height: \"400px\",\r\n};\r\n\r\nfunction GoCheck() {\r\n  const [center, setCenter] = useState(false);\r\n  function userPos() {\r\n    navigator.geolocation.getCurrentPosition(function (position) {\r\n        console.log(position)\r\n      setCenter({\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      });\r\n    });\r\n  }\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyAT5JNluu7-DZ_JsMFFbVEudvfwP3SqUok\",\r\n  });\r\n\r\n  const [map, setMap] = React.useState(null);\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    userPos();\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return isLoaded ? (\r\n    <>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        {center && <Marker position={center} />}\r\n      </GoogleMap>\r\n      <button onClick={() => userPos()}>Check IN</button>\r\n    </>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(GoCheck);\r\n","import React, { Component } from 'react';\n\nimport { auth } from '../../firebase';\n\nconst updateByPropertyName = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { passwordOne } = this.state;\n\n    auth.doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState(() => ({ ...INITIAL_STATE }));\n      })\n      .catch(error => {\n        this.setState(updateByPropertyName('error', error));\n      });\n\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          value={passwordOne}\n          onChange={event => this.setState(updateByPropertyName('passwordOne', event.target.value))}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          value={passwordTwo}\n          onChange={event => this.setState(updateByPropertyName('passwordTwo', event.target.value))}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        { error && <p>{error.message}</p> }\n      </form>\n    );\n  }\n}\n\nexport default PasswordChangeForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport { firebase } from '../../firebase';\nimport * as routes from '../../constants/routes';\n\nconst withAuthorization = (condition) => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(routes.SIGN_IN);\n        }\n      });\n    }\n\n    render() {\n      return this.context.authUser ? <Component /> : null;\n    }\n  }\n\n  WithAuthorization.contextTypes = {\n    authUser: PropTypes.object,\n  };\n\n  return withRouter(WithAuthorization);\n}\n\nexport default withAuthorization;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport withAuthorization from '../Session/withAuthorization';\n\nconst AccountPage = (props, { authUser }) =>\n  <div>\n    <h1>Account: {authUser.email}</h1>\n    <PasswordForgetForm />\n    <PasswordChangeForm />\n  </div>\n\nAccountPage.contextTypes = {\n  authUser: PropTypes.object,\n};\n\nconst authCondition = (authUser) => !!authUser;\n\nexport default withAuthorization(authCondition)(AccountPage);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { firebase } from '../../firebase';\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n      };\n    }\n\n    getChildContext() {\n      return {\n        authUser: this.state.authUser,\n      };\n    }\n\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState(() => ({ authUser }))\n          : this.setState(() => ({ authUser: null }));\n      });\n    }\n\n    render() {\n      return (\n        <Component />\n      );\n    }\n  }\n\n  WithAuthentication.childContextTypes = {\n    authUser: PropTypes.object,\n  };\n\n  return WithAuthentication;\n}\n\nexport default withAuthentication;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport GoCheck from '../GoCheck'\nimport AccountPage from '../Account';\nimport withAuthentication from '../Session/withAuthentication';\nimport * as routes from '../../constants/routes';\n\nimport './index.css';\n\nconst App = () =>\n  <Router>\n    <div className=\"app\">\n      <Navigation />\n\n      <hr/>\n\n      <Route exact path={routes.LANDING} component={() => <LandingPage />} />\n      <Route exact path={routes.SIGN_UP} component={() => <SignUpPage />} />\n      <Route exact path={routes.SIGN_IN} component={() => <SignInPage />} />\n      <Route exact path={routes.PASSWORD_FORGET} component={() => <PasswordForgetPage />} />\n      <Route exact path={'/home'} component={() => <GoCheck />} />\n      <Route exact path={routes.ACCOUNT} component={() => <AccountPage />} />\n\n      <hr/>\n\n      <span>Found in <a href=\"https://roadtoreact.com/course-details?courseId=TAMING_THE_STATE\">Taming the State in React</a></span> | <span>Star the <a href=\"https://github.com/rwieruch/react-firebase-authentication\">Repository</a></span> | <span>Receive a <a href=\"https://www.getrevue.co/profile/rwieruch\">Developer's Newsletter</a></span>\n    </div>\n  </Router>\n\nexport default withAuthentication(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}